g <- ggplot(mpg, aes(cty, hwy) )
p <- g  + geom_point(aes(color = cyl))+ geom_smooth(method = "lm") + facet_grid(. ~ cyl)+ theme_economist()
l <- p + labs(title = "my graph", subtitle = "my graph 1 ", ylab = "test")
print (p)
library(ggthemes) # Charger
g <- ggplot(mpg, aes(cty, hwy) )
p <- g  + geom_point(aes(color = cyl))+ geom_smooth(method = "lm") + facet_grid(. ~ cyl)+ theme_economist()
l <- p + labs(title = "my graph", subtitle = "my graph 1 ", y = "test")
print (p)
library(ggthemes) # Charger
g <- ggplot(mpg, aes(cty, hwy) )
p <- g  + geom_point(aes(color = cyl))+ geom_smooth(method = "lm") + facet_grid(. ~ cyl)+ theme_economist()
l <- p + labs(title = "my graph", subtitle = "my graph 1 ", y = "test")
+ xlab("Dose (mg)")
library(ggthemes) # Charger
g <- ggplot(mpg, aes(cty, hwy) )
p <- g  + geom_point(aes(color = cyl))+ geom_smooth(method = "lm") + facet_grid(. ~ cyl)+ theme_economist()
l <- p + labs(title = "my graph", subtitle = "my graph 1 ", y = "test") + xlab("Dose (mg)") + ylab("Teeth length")
print (p)
library(ggthemes) # Charger
g <- ggplot(mpg, aes(cty, hwy) )
p <- g  + geom_point(aes(color = cyl))+ geom_smooth(method = "lm") + facet_grid(. ~ cyl)+ theme_economist()
l <- p + labs(title = "my graph", subtitle = "my graph 1 ") + xlab("Dose (mg)") + ylab("Teeth length")
print (p)
library(ggthemes) # Charger
g <- ggplot(mpg, aes(cty, hwy) )
p <- g  + geom_point(aes(color = cyl))+ geom_smooth(method = "lm") + facet_grid(. ~ cyl)+ theme_economist()
l <- p + labs(title = "my graph", subtitle = "my graph 1 ") + xlab("Dose (mg)") + ylab("Teeth length")
print (l)
library(ggthemes) # Charger
g <- ggplot(mpg, aes(cty, hwy) )
p <- g  + geom_point(aes(color = cyl), color = "red")+ geom_smooth(method = "lm") + facet_grid(. ~ cyl)+ theme_economist()
l <- p + labs(title = "my graph", subtitle = "my graph 1 ") + xlab("Dose (mg)") + ylab("Teeth length")
print (l)
testdata <- data.frame(x = 1:100, y = rnorm(100))
testdata(50,2) <- 100 ### outlier introduced
testdata <- data.frame(x = 1:100, y = rnorm(100))
testdata(50:2) <- 100 ### outlier introduced
testdata <- data.frame(x = 1:100, y = rnorm(100))
testdata(50,2) <- 100 ### outlier introduced
testdata
testdata <- data.frame(x = 1:100, y = rnorm(100))
testdata(50,2) <- 100 ### outlier introduced
testdata
testdata
testdata <- data.frame(x = 1:100, y = rnorm(100))
testdata[50,2] <- 100 ### outlier introduced
plot(testdata)
testdata <- data.frame(x = 1:100, y = rnorm(100))
testdata[50,2] <- 100 ### outlier introduced
p <-(testdata)
testdata <- data.frame(x = 1:100, y = rnorm(100))
testdata[50,2] <- 100 ### outlier introduced
g <- ggplot(testdata, aes(x = x, y = v))
print(g+geom_line)
testdata <- data.frame(x = 1:100, y = rnorm(100))
testdata[50,2] <- 100 ### outlier introduced
g <- ggplot(testdata, aes(x = x, y = v))
print(g+geom_line())
testdata <- data.frame(x = 1:100, y = rnorm(100))
testdata[50,2] <- 100 ### outlier introduced
g <- ggplot(testdata, aes(x = x, y = v))
p <- g+geom_line()
testdata <- data.frame(x = 1:100, y = rnorm(100))
testdata[50,2] <- 100 ### outlier introduced
g <- ggplot(testdata, aes(x = x, y = v))
p <- g+geom_line()
print(p)
testdata <- data.frame(x = 1:100, y = rnorm(100))
testdata[50,2] <- 100 ### outlier introduced
g <- ggplot(testdata, aes(x = x, y = y))
p <- g+geom_line()
print(p)
p <- g + geom_line() + ylim (-3,3)
prin(p)
p <- g + geom_line() + ylim (-3,3)
print(p)
p <- g + geom_line() + coord_cartesian(ylim = (-3,3))
p <- g + geom_line() + coord_cartesian(ylim = (-3,3))
p <- g + geom_line() + coord_cartesian(ylim = c(-3,3))
print (p)
g + geom_point(alpha = 1/3)
cutpoints <- quantile( mydata$xxx, seq(0,1, lenght = 4), na.rm = TRUE)
g <- ggplot(mpg, aes(hwy, cty))
p <- g + geom_point(alpha = 1/3) + facet_wrap(cyl, nrow = 1, nvol = 3) + geom_smooth(method = "lm", se=FAMSE, col="steelblue" + theme_bw(base_family = "Avenir", base_size = 10) + labs(x = "yoyoyo") + labs(y = "Nocturnal Symptoms") + labs(title = "MAACS Cohort"))
g <- ggplot(mpg, aes(hwy, cty))
p <- g + geom_point(alpha = 1/3) + facet_wrap(cyl, nrow = 1, ncol = 3) + geom_smooth(method = "lm", se=FAMSE, col="steelblue" + theme_bw(base_family = "Avenir", base_size = 10) + labs(x = "yoyoyo") + labs(y = "Nocturnal Symptoms") + labs(title = "MAACS Cohort"))
g <- ggplot(mpg, aes(hwy, cty))
p <- g + geom_point(alpha = 1/3) + facet_wrap(.~cyl, nrow = 1, ncol = 3) + geom_smooth(method = "lm", se=FAMSE, col="steelblue" + theme_bw(base_family = "Avenir", base_size = 10) + labs(x = "yoyoyo") + labs(y = "Nocturnal Symptoms") + labs(title = "MAACS Cohort"))
g <- ggplot(mpg, aes(hwy, cty))
p <- g + geom_point(alpha = 1/3) + facet_wrap(.~cyl, nrow = 1, ncol = 3) + geom_smooth(method = "lm", se=FALSE, col="steelblue" + theme_bw(base_family = "Avenir", base_size = 10) + labs(x = "yoyoyo") + labs(y = "Nocturnal Symptoms") + labs(title = "MAACS Cohort"))
g <- ggplot(mpg, aes(hwy, cty))
p <- g + geom_point(alpha = 1/3) + facet_wrap(.~cyl, nrow = 1, ncol = 3) + geom_smooth(method = "lm", se=FALSE, col="steelblue") + theme_bw(base_family = "Avenir", base_size = 10) + labs(x = "yoyoyo") + labs(y = "Nocturnal Symptoms") + labs(title = "MAACS Cohort"))
g <- ggplot(mpg, aes(hwy, cty))
p <- g + geom_point(alpha = 1/3) + facet_wrap(.~cyl, nrow = 1, ncol = 3) + geom_smooth(method = "lm", se=FALSE, col="steelblue") + theme_bw(base_family = "Avenir", base_size = 10) + labs(x = "yoyoyo") + labs(y = "Nocturnal Symptoms") + labs(title = "MAACS Cohort")
print (p)
g <- ggplot(mpg, aes(hwy, cty))
p <- g + geom_point(alpha = 1/3) + facet_wrap(.~cyl, nrow = 2, ncol = 3) + geom_smooth(method = "lm", se=FALSE, col="steelblue") + theme_bw(base_family = "Avenir", base_size = 10) + labs(x = "yoyoyo") + labs(y = "Nocturnal Symptoms") + labs(title = "MAACS Cohort")
print (p)
swirl()
package(swirl)
swirl
swirl()
swirl
swirl
swirl()
swirl(go)
?swirl
??swirl
g <- ggplot(mpg, aes(hwy, cty))
p <- g + geom_point(alpha = 1/3) + facet_wrap(.~cyl, nrow = 2, ncol = 3) + geom_smooth(method = "lm", se=FALSE, col="steelblue") + theme_bw(base_family = "Avenir", base_size = 10) + labs(x = "yoyoyo") + labs(y = "Nocturnal Symptoms") + labs(title = "MAACS Cohort")
print (p)
library(swirl)
swirl())
swirl()
install_course("Exploratory_Data_Analysis")
swirl()
head(airquality)
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind, data=airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind, data=airquality,  pch = 8,col = "red", main = "Big Apple Data")
xyplot(Ozone~Wind, data=airquality,  pch = 8,col = "red", main = "Big Apple Data")
xyplot(Ozone~Wind| as.factor(Month), data=airquality,  pch = 8,col = "red", main = "Big Apple Data")
xyplot(Ozone~Wind| as.factor(Month), data=airquality,  layout =c(5,1))
xyplot(Ozone~Wind|Month, data=airquality,  layout =c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
p
names(p)
swirl(exit)
swirl(end)
set.seed(1234)
par(mar = c(0,0,0,0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd=0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each = 4), sd=0.2)
plot(x,y,col="blue", pch=19, cex=2)
text(x + 0.05, y + 0.05, labels=as.character(1:12))
set.seed(1234)
par(mar = c(0,0,0,0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd=0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each = 4), sd=0.2)
plot(x,y,col="blue", pch=19, cex=2)
text(x + 0.05, y + 0.05, labels=as.character(1:12))
dataFrame <- data.frame(x,y
dataFrame <- data.frame(x,y)
dataFrame <- data.frame(x,y)
dist(dataFrame)
distxy <- dist(dataFrame)
plot(hclust())
plot(hclust(
hclust <- hclust(distxy)
plot(hclust(
plot(hclust)
hclust <- hclust(distxy)
plot(hclust)
myhclust <- function(hclust, lab = hclust$labels, lab.col=rep(1, length(hclust$labels)),
hang = 0.1,...){
y <- rep(hclust$height, 2)
x <- as.numeric(hclust$merge)
y <- y[which(x<0)]
x <- x[which(x<0)]
x <- abs(x)
y <- y[order(x)]
x <- x[order(x)]
plot(hclust, labels = FALSE, hang = hang, ...)
text(x = x, y = y[hclust$order] - (max(hclust$height)*hang), labels=lab[hclust$order], col=lab.col[hclust$order], srt=90,adj=c(1,0.5), xpd = NA, ...)
}
}
myhclust <- function(hclust, lab = hclust$labels, lab.col=rep(1, length(hclust$labels)),
hang = 0.1,...){
y <- rep(hclust$height, 2)
x <- as.numeric(hclust$merge)
y <- y[which(x<0)]
x <- x[which(x<0)]
x <- abs(x)
y <- y[order(x)]
x <- x[order(x)]
plot(hclust, labels = FALSE, hang = hang, ...)
text(x = x, y = y[hclust$order] - (max(hclust$height)*hang), labels=lab[hclust$order], col=lab.col[hclust$order], srt=90,adj=c(1,0.5), xpd = NA, ...)
}
plot(hclust)
myhclust
myhclust()
myhclust(hclust)
myhclust(hclust)
plot(hclust)
myhclust(hclust=hclust)
myhclust(hclust=hclust)
myhclust <- function(hclust, lab = hclust$labels, lab.col=rep(1, length(hclust$labels)),
hang = 0.1,...){
y <- rep(hclust$height, 2)
x <- as.numeric(hclust$merge)
y <- y[which(x<0)]
x <- x[which(x<0)]
x <- abs(x)
y <- y[order(x)]
x <- x[order(x)]
plot(hclust, labels = FALSE, hang = hang, ...)
text(x = x, y = y[hclust$order] - (max(hclust$height)*hang), labels=lab[hclust$order], col=lab.col[hclust$order], srt=90,adj=c(1,0.5), xpd = NA, ...)
}
myhclust(hclust=hclust)
distxy <- dist(dataFrame)
hclust <- hclust(distxy)
plot(hclust)
myhclust <- function(hclust, lab = hclust$labels, lab.col=rep(1, length(hclust$labels)),
hang = 0.1,...){
y <- rep(hclust$height, 2)
x <- as.numeric(hclust$merge)
y <- y[which(x<0)]
x <- x[which(x<0)]
x <- abs(x)
y <- y[order(x)]
x <- x[order(x)]
plot(hclust, labels = FALSE, hang = hang, ...)
text(x = x, y = y[hclust$order] - (max(hclust$height)*hang), labels=lab[hclust$order], col=lab.col[hclust$order], srt=90,adj=c(1,0.5), xpd = NA, ...)
}
myhclust(hclust=hclust)
myhclust(hclust=hclust, lab = rep(1:3, each = 4), lab.col = rep(1:3, each = 4))
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
heatmap(dataMatrix)
x
y
kmeansDF <- kmeans(dataFrame, centers = 3)
names(kmeansDF)
kmeansDF
heatmap(kmeansDF)
kmeansDF <- kmeans(dataMatrix, centers = 3)
kmeansDF <- kmeans(dataMatrix, centers = 3)
par(mfrow = c(1,2), mar=c(2,4,0.1,0.1))
kmeansDF <- kmeans(dataMatrix, centers = 3)
par(mfrow = c(1,2), mar=c(2,4,0.1,0.1))
image(t(dataMatrix)[, nrow(dataMatrix):1], yaxt = "n")
image(t(dataMatrix)[, order(kmeansDF$cluster)], yaxt = "n")
heatmap(dataMatrix)
image(1:10, 1:40, t(dataMatrix)[,nrow(dataMatrix):1])
set.seed(12345)
par(mar=rep(0.2,4))
dataMatrix1 <- matrix(rnorm(400), nrow=40)
image(1:10, 1:40, t(dataMatrix)[,nrow(dataMatrix):1])
set.seed(12345)
par(mar=rep(0.2,4))
dataMatrix1 <- matrix(rnorm(400), nrow=40))
set.seed(12345)
par(mar=rep(0.2,4))
dataMatrix1 <- matrix(rnorm(400), nrow=40)
image(1:10, 1:40, t(dataMatrix)[,nrow(dataMatrix):1])
set.seed(12345)
par(mar=rep(0.2,4))
dataMatrix1 <- matrix(rnorm(400), nrow=40)
image(1:10, 1:40, t(dataMatrix1)[,nrow(dataMatrix):1])
set.seed(12345)
par(mar=rep(0.2,4))
dataMatrix1 <- matrix(rnorm(400), nrow=40)
image(1:10, 1:40, t(dataMatrix1)[,nrow(dataMatrix1):1])
heatmap(dataMatrix1)
for (i in 1:40){
# flip a coin
coinFlip <- rbinom(1, size = 1, prob = 0.5)
# if coin is head ass a common pattern to that row
dataMatrix[i,] <- dataMatrix[i,] + rep(c(0,3), each = 5)
}
for (i in 1:40){
# flip a coin
coinFlip <- rbinom(1, size = 1, prob = 0.5)
# if coin is head ass a common pattern to that row
dataMatrix1[i,] <- dataMatrix1[i,] + rep(c(0,3), each = 5)
}
par(mar = rep(0.2,4))
heatmap(dataMatrix1)
hh <- hclust(dist(dataMatrix1))
par(mar = rep(0.2,4))
heatmap(dataMatrix1)
hh <- hclust(dist(dataMatrix1))
dataMatrix1Ordered <- dataMatrix1[hh$order,]
par(mar = rep(0.2,4))
image(t(dataMatrix1))
image(t(dataMatrix1Ordered))
image(t(dataMatrix1Ordered)[, nrow(dataMatrix1Ordered):1])
hh <- hclust(dist(dataMatrix1))
dataMatrix1Ordered <- dataMatrix1[hh$order,]
par(mar = rep(0.2,4))
image(t(dataMatrix1Ordered)[, nrow(dataMatrix1Ordered):1])
plot(rowMeans(dataMatrix1Ordered), 40:1,  xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrix1Ordered),xlab = "Column",  ylab = "Column mean", ylab = "Row", pch = 19)
hh <- hclust(dist(dataMatrix1))
dataMatrix1Ordered <- dataMatrix1[hh$order,]
par(mar = rep(0.2,4))
image(t(dataMatrix1Ordered)[, nrow(dataMatrix1Ordered):1])
plot(rowMeans(dataMatrix1Ordered), 40:1,  xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrix1Ordered),xlab = "Column",  ylab = "Column mean",  pch = 19)
par(mfrow = c(1,2))
svd1 <- svd(scale(dataMatrix1Ordered))
par(mfrow = c(1,3))
image(t(dataMatrix1Ordered)[, nrow(dataMatrix1Ordered):1])
svd1 <- svd(scale(dataMatrix1Ordered))
par(mfrow = c(1,3))
image(t(dataMatrix1Ordered)[, nrow(dataMatrix1Ordered):1])
plot(svd1$u[,1], 40:1,  xlab = "Row", ylab = "First Left Singular Vector", pch = 19)
plot(svd1$v[,1],xlab = "Column",  ylab = "First Right Singular Vector",  pch = 19)
svd1 <- svd(scale(dataMatrix1Ordered))
par(mfrow = c(1,3))
image(t(dataMatrix1Ordered)[, nrow(dataMatrix1Ordered):1])
plot(svd1$u[,1], 40:1,  xlab = "Row", ylab = "First Left Singular Vector", pch = 19)
plot(svd1$v[,1],xlab = "Column",  ylab = "First Right Singular Vector",  pch = 19)
par(mfrow = c(1,2))
plot(svd1$d,  xlab = "column", ylab = "Singular Value", pch = 19)
plot(svd1$d^2/sum(svd$d^2),xlab = "Column",  ylab = "Prop of variance explained",  pch = 19)
par(mfrow = c(1,2))
plot(svd1$d,  xlab = "column", ylab = "Singular Value", pch = 19)
plot(svd1$d^2/sum(svd1$d^2),xlab = "Column",  ylab = "Prop of variance explained",  pch = 19)
names(svd1)
svd1
library(impute)
install.packages("impute")
dataMatrix2 <- dataMatrix1
dataMatrix2[sample(1:100, size=40, replace = FALSE)] <- NA
dataMatrix2
dataMatrix2 <- impute.kn,{dataMatrix2}&data
dataMatrix2 <- impute.knn,{dataMatrix2}&data
library(impute)
install.packages("impute")
??impute
plot(svd1$d)
plot(svd1$u)
plot(svd1$v)
plot(x, y)
x <- rnorm(10)
y <- rnorm(10)
plot(x, y)
x <- rnorm(10)
y <- rnorm(10)
plot(x, y)
plot(x, y, col = c(1,2,3))
heatmap(x,y)
heatmap(x)
heatmap(matrix(x,y))
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(0.2)
pal(1)
pal(0)
pal(1)
pal(0.2)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(0.2)
```{r}
pal(seq(0,1,len=10))
pal <- colorRampPalette(c("red", "yellow"))
pal(22)
pal(2)
pal(100)
pal(2)
pal <- colorRampPalette(c("red", "yellow"))
pal(2)
pal(100)
library(RColorBrewer)
blues
RColorBrewer::brewer.pal(Set3)
RColorBrewer::brewer.pal(Set3, 3)
RColorBrewer::brewer.pal(3, Set3)
cols <- brewer.pal((3, "Bugn"))
cols <- brewer.pal(3, "Bugn")
cols <- brewer.pal(3, "BuGn")
cols
image(volcano, col = pal(20))
pal <- colorRampPalette(cols)
image(volcano, col = pal(20))
image(volcano, col = pal(20))
x<- rnorm(10000)
Y <- rnorm(10000)
smoothScatter(x,y)
x <- rnorm(10000)
Y <- rnorm(10000)
smoothScatter(x,y)
x <- rnorm(10000)
Y <- rnorm(10000)
smoothScatter(x,y)
Y <- rnorm(1000)
x <- rnorm(1000)
Y <- rnorm(1000)
smoothScatter(x,y)
x <- rnorm(1000)
y <- rnorm(1000)
smoothScatter(x,y)
x <- rnorm(100000)
y <- rnorm(100000)
smoothScatter(x,y)
rgb(red = 1, blue = 5, green = 200)
rgb(red = 1, blue = 0.1, green = 1)
plot(x,y, col = rgb(0,0,0,0.2), pch=19)
plot(x,y, col = rgb(0,0,0,0.02), pch=19)
x <- rnorm(100)
y <- rnorm(100)
plot(x,y, col = rgb(0,0,0,0.02), pch=19)
plot(x,y, col = rgb(0,0,0,0.2), pch=19)
y <- rnorm(1000)
x <- rnorm(1000)
y <- rnorm(1000)
plot(x,y, col = rgb(0,0,0,0.2), pch=19)
plot(x,y, col = rgb(1,0,0,0.2), pch=19)
plot(x,y, col = rgb(1,0,0,0.1), pch=19)
library(swirl)
??swirl
?swirl
library(swirl)
library(swirl)
?swirl
??swirl
library(swirl)
library(swirl)
swirl()
library(swirl)
install.packages('swirl')
library(swirl)
library(swirl)
airquality <- transform(airquality, Month = factor(Month))
state <- data.frame(state.x77, region = state.region)
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1) )
library(lattice)
library (datasets)
```{r}
```{r}
state <- data.frame(state.x77, region = state.region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1) )
```{r}
airquality <- transform(airquality, Month = factor(Month))
state <- data.frame(state.x77, region = state.region)
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1) )
library(swirl)
install.packages("swirl")
install.packages("swirl")
library(swirl)
library(swirl)
swirl()
?swirl
??swirl
library(swirl)
.rs.restartR()
library(swirl)
?remove.packages(swirl)
remove.packages(swirl)
remove.packages("swirl")
remove.packages("swirl")
install.packages("swirl")
library(swirl)
install.packages("rlang")
??Rtools
install.packages("Rtools")
install.packages("Rtools")
library(swirl)
Mat
swirl()
library(ggplot2)
library(swirl)
swirl()
1/6*1+1/6*2+1/6*3+1/6*4+1/6*5+1/6*6
expect_dice()
expect_dice(6)
expect_dice(pmf = 6)
expect_dice(pmf = 6, 3)
expect_dice(pmf = 6)
expect_dice(pmf)
pmf= 6
expect_dice(pmf)
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
0.5*(edh + edl)
swirl()
swirl()
library(swirl)
swirl()
integrate(myfunc)
integrate(myfunc,0,2)
spop
mean(spop)
allsam
apply(allsam, mean)
apply(allsam,1, mean)
mean(smeans)
dice_sqr
dice_fair
dice_sqr * dice_fair
ex2_fair <- dice_fair * dice_sqr
ex2_fair <- dice_sqr * dice_fair
ex2_fair <- sum(dice_sqr * dice_fair)
ex2_fair - 3.5^2
sum(dice_sqr * dice_high) - 3.5^2
sum(dice_sqr * dice_high) - edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(rnorm10000),1000),1,mean)
sd(apply(matrix(rnorm(10000),1000),1,mean))
sd(apply(matrix(rnorm(10000,0,1/12),1000),1,mean))
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/2*sqrt(10)
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
choose(5,3)
choose(5,3)* 0.8^3*0.2^2
choose(5,3)*0.8^3*0.2^2
choose(5,3)*0.8^3*0.2^2 + choose(5,3)*0.8^4*0.2^1 + choose(5,3)*0.8^5*0.2^0
choose(5,3)*0.8^3*0.2^2 + choose(5,4)*0.8^4*0.2^1 + choose(5,5)*0.8^5*0.2^0
pbinom(2,5,.8)
pbinom(2,5,.8,lower.tail = FALSE)
swirl()
